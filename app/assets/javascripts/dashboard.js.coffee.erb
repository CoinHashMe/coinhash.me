# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

# lineChartOperaHack = ->
#   return unless 
#   
#   #lineChart is somehow not rendered correctly after updates. Need to reupdate
#   if navigator.userAgent.indexOf("Opera")
#     clearTimeout lineResize
#     lineResize = setTimeout(lineChart.update, 300)
# lineResize = undefined
# lineChart = undefined
ready = ->
  return unless window.results

  nv.addGraph ->
    
    #.showLegend(false)
    chart = nv.models.lineChart().margin(
      top: 0
      bottom: 25
      left: 25
      right: 0
    ).color([$orange, "#cf6d51"])
    
    #'#618fb0', '#61b082'
    chart.legend.margin top: 3
    chart.yAxis.showMaxMin(false).tickFormat d3.format(",.f")
    chart.xAxis.showMaxMin(false).tickFormat (d) ->
      d3.time.format("%H:%M") new Date(d)

    d3.select("#visits-chart svg").datum(window.results).transition().duration(500).call chart
    nv.utils.windowResize chart.update
    chart.legend.dispatch.on "legendClick.updateExamples", ->
      lineChartOperaHack()

    lineChart = chart
    lineChartOperaHack()
    chart


  return unless window.sparklines
  # Sparklines can also take their values from the first argument
  #     passed to the sparkline() function 
  randomValue = ->
    Math.floor Math.random() * 40
  
  # function drawSparkLines(){
  #     options.lineColor = $colors;
  #     options.fillColor = 'rgba(86, 188, 118, 0.1)';
  #     $('#direct-trend').sparkline(values[0], options);
  #     options.lineColor = $orange;
  #     options.fillColor = 'rgba(234, 200, 94, 0.1)';
  #     $('#refer-trend').sparkline(values[1], options );
  #     options.lineColor = $blue;
  #     options.fillColor = 'rgba(106, 141, 167, 0.1)';
  #     $('#social-trend').sparkline(values[2], options );
  #     options.lineColor = $red;
  #     options.fillColor = 'rgba(229, 96, 59, 0.1)';
  #     $('#search-trend').sparkline(values[3], options );
  #     options.lineColor = $gray;
  #     options.fillColor = 'rgba(212, 212, 212, 0.1)';
  #     $('#internal-trend').sparkline(values[4], options );
  # }
  
  # $(window).resize(function(e) {
  #     clearTimeout(sparkResize);
  #     sparkResize = setTimeout(drawSparkLines, 200);
  # });
  
  # Notification link click handler.
  # JUST FOR DEMO.
  # Can be removed.
  close = (e) ->
    $settings = $("#settings")
    $popover = $settings.siblings(".popover")
    unless $.contains($popover[0], e.target)
      $settings.popover "hide"
      $(document).off "click", close
  options =
    width: "150px"
    height: "30px"
    lineColor: $white
    lineWidth: "2"
    spotRadius: "2"
    highlightLineColor: $gray
    highlightSpotColor: $gray
    fillColor: $gray
    spotColor: false
    minSpotColor: false
    maxSpotColor: false

  values = sparklines
  colors =
    DOGE: "orange"
    EAC: "green"
    RPC: "red"
    LOT: "orange"
    SBC: "red"
    42: "grey"
    DGB: "blue"
    KDC: "blue"
    LTC: "grey"
    LEAF: "green"

  fillColors =
    DOGE: "rgba(234, 200, 94, 0.1)"
    EAC: "rgba(86, 188, 118, 0.1)"
    RPC: "rgba(229, 96, 59, 0.1)"
    LOT: "rgba(234, 200, 94, 0.1)"
    SBC: "rgba(229, 96, 59, 0.1)"
    42: "rgba(212, 212, 212, 0.1)"
    DGB: "rgba(106, 141, 167, 0.1)"
    KDC: "rgba(106, 141, 167, 0.1)"
    LTC: "rgba(212, 212, 212, 0.1)"
    LEAF: "rgba(86, 188, 118, 0.1)"

  sparkResize = undefined
  i = 0

  while i < sparklines.length
    color = colors[sparkline_order[i]]
    fillColor = fillColors[sparkline_order[i]]
    options.lineColor = window["$" + color]
    options.fillColor = fillColor
    $(".sparkline[data-index=" + i + "]").sparkline sparklines[i], options
    i++
  $("#notification-link").click ->
    if $(window).width() > 767
      $("#settings").popover "show"
      $(document).on "click", close
      false

  $("#feed").slimscroll
    height: "auto"
    size: "5px"
    alwaysVisible: true
    railVisible: true

  $("#chat-messages").slimscroll
    height: "240px"
    size: "5px"
    alwaysVisible: true
    railVisible: true

  $('.news-list > li').click ->
    window.location = $(this).data 'link'

$(document).ready ready
$(document).on 'page:load', ready
